<?php
/**
 * @file
 * µLink module.
 */

use Drupal\Core\Form\FormState;

/**
 * Implements hook_menu().
 */
function ulink_menu() {
  $items = [];

  $items['ulink/dialog'] = [
    'page callback'     => 'sf_dic_page',
    'page arguments'    => ['MakinaCorpus\ULink\Controller\DialogController::dialog'],
    'access arguments'  => ['access content'],
  ];
  $items['ulink/search'] = [
    'page callback'     => 'sf_dic_page',
    'page arguments'    => ['MakinaCorpus\ULink\Controller\DialogController::search'],
    'access arguments'  => ['access content'],
  ];

  return $items;
}

/**
 * Implements hook_ckeditor_plugin().
 */
function ulink_ckeditor_plugin() {
  return [
    'ulink' => [
      'name' => 'ulink',
      'desc' => t("µLink entity selector"),
      'path' => drupal_get_path('module', 'ulink') . '/js/ckeditor/',
      'buttons' => [
        'ulink' => [
          'label' => t("Link content"),
          'icon'  => 'icons/ulink.png',
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_element_info_alter().
 */
function ulink_element_info_alter(&$types) {
  // Used when using ckeditor module.
  if (isset($types['text_format']['#pre_render']) && is_array($types['text_format']['#pre_render'])) {
    if (in_array('ckeditor_pre_render_text_format', $types['text_format']['#pre_render'])) {
      $types['text_format']['#attached']['library'][] = ['ulink', 'dialog'];
    }
  }
}

/**
 * Implements hook_library().
 */
function ulink_library() {
  return [
    'dialog' => [
      'title'   => 'µLink',
      'website' => 'http://github.com/makinacorpus/ulink',
      'version' => '0.1',
      'js' => [
        drupal_get_path('module', 'ulink') . '/js/better-autocomplete/better-autocomplete.js' => [],
        drupal_get_path('module', 'ulink') . '/js/ulink.js' => [],
      ],
      'css' => [
        drupal_get_path('module', 'ulink') . '/js/better-autocomplete/better-autocomplete.css' => [],
      ],
      'dependencies' => [
        ['system', 'drupal.ajax'],
        ['system', 'ui.dialog'],
      ],
    ],
  ];
}

/**
 * Implements hook_filter_info().
 */
function ulink_filter_info() {
  return [
    'ulink_entity' => [
      'title'             => t('Does some linking'),
      'description'       => t('Will process anything like entity://TYPE/ID where TYPE is an entity type and ID is an entity identifier and convert it to link'),
      'prepare callback'  => 'ulink_filter_prepare',
      'process callback'  => 'ulink_filter_process',
      'settings callback' => 'ulink_filter_settings',
      'default settings'  => [],
    ],
  ];
}

/**
 * Implements callback_filter_prepare().
 */
function ulink_filter_prepare($text, $filter, $format, $langcode) {
  return sf_dic_plugin_create('MakinaCorpus\ULink\EntityLinkFilter', (array)$filter)->prepare($text, $langcode);
}

/**
 * Implements callback_filter_process().
 */
function ulink_filter_process($text, $filter, $format, $langcode) {
  return sf_dic_plugin_create('MakinaCorpus\ULink\EntityLinkFilter', (array)$filter)->process($text, $langcode)->getProcessedText();
}

/**
 * Implements callback_filter_settings().
 */
function ulink_filter_settings($form, &$form_state, $filter) {
  return sf_dic_plugin_create('MakinaCorpus\ULink\EntityLinkFilter', (array)$filter)->settingsForm($form, new FormState($form_state));
}
